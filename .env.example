#######################################
# Configuration Hot Reload
#######################################

# Enable/disable hot configuration reload
# Purpose: Controls whether YAML configs can be reloaded without restart
# Risk: When true, config changes take effect immediately (use with caution in production)
# Required: Yes (defaults to true if missing)
# Values: true|false
CONFIG_HOTRELOAD_ENABLED=true

# Time between automatic configuration reload checks
# Purpose: Sets the interval for checking YAML file changes
# Risk: Too low values may impact performance due to frequent file checks
# Required: Optional (defaults to 60)
# Unit: seconds
CONFIG_HOTRELOAD_TTL_SECONDS=60

# Directory containing configuration YAML files
# Purpose: Specifies where to find rules/*.yml configuration files
# Risk: Incorrect path will cause startup failure
# Required: Yes
# Default: rules
RULES_DIR=rules

#######################################
# Core Database
#######################################

# PostgreSQL host address
# Purpose: Database server hostname or IP
# Required: Yes (for production)
# Source: Your database provider or docker-compose service name
# Example: localhost, db, postgres.example.com
POSTGRES_HOST=__REPLACE_ME__

# PostgreSQL port
# Purpose: Database server port
# Required: Yes (for production)
# Default: 5432 (standard PostgreSQL port)
POSTGRES_PORT=__REPLACE_ME__

# PostgreSQL database name
# Purpose: Name of the database to connect to
# Required: Yes (for production)
# Source: Created via CREATE DATABASE command
POSTGRES_DB=__REPLACE_ME__

# PostgreSQL username
# Purpose: Database authentication username
# Required: Yes (for production)
# Minimum permission: SELECT, INSERT, UPDATE, DELETE on app tables
POSTGRES_USER=__REPLACE_ME__

# PostgreSQL password
# Purpose: Database authentication password
# Required: Yes (for production)
# Security: Use strong password, rotate regularly
# WARNING: Never commit real passwords to version control
POSTGRES_PASSWORD=__REPLACE_ME__

# Full PostgreSQL connection URL
# Purpose: Complete database connection string
# Required: Yes
# Note: Auto-constructed in docker-compose, override for external DB
# Format: postgresql://user:password@host:port/database
POSTGRES_URL=postgresql://app:app@db:5432/app

#######################################
# Cache Layer
#######################################

# Redis connection URL
# Purpose: Cache and temporary data storage
# Required: Yes
# Risk: Without Redis, performance will degrade significantly
# Format: redis://host:port/db_number
REDIS_URL=redis://redis:6379/0

#######################################
# External API Keys / Tokens
# WARNING: Never commit real keys to git
# Use environment-specific .env files
#######################################

# X (Twitter) Platform Bearer Token
# Purpose: Authentication for X/Twitter API data collection
# Required: Yes (for X data ingestion)
# Source: https://developer.twitter.com/en/portal/dashboard
# Minimum permission: Read tweets, user profiles
# Security: Rotate if exposed, use read-only token
# WARNING: Do not commit to version control
X_BEARER_TOKEN=__REPLACE_ME__

# X backend selection (multi-source)
# Purpose: Configure ordered backends and failover behavior
# Required: Optional (defaults to single 'graphql')
# Values: comma-separated list of backends: graphql, apify, api, off
X_BACKENDS=graphql,apify

# Legacy single-backend knob (still supported)
# Values: graphql | api | apify | off
X_BACKEND=graphql

# Apify configuration (used when 'apify' is enabled in X_BACKENDS)
# Purpose: Access token for Apify API; never commit real token
APIFY_TOKEN=
# Default actor for tweet scraping (override if you fork/clone the actor)
APIFY_TWEET_SCRAPER_ACTOR=apify/tweet-scraper-v2
# Default country code for the actor input
APIFY_DEFAULT_COUNTRY=US

# Apify polling controls
APIFY_POLL_INTERVAL_MS=800
APIFY_POLL_MAX=3
# Cap items to at most limit * multiplier (cost guard)
APIFY_ITEMS_MAX_MULTIPLIER=2

# X multi-source tuning
# Cooldown period after a backend failure before trying again
X_FAILOVER_COOLDOWN_SEC=60
# Per-request timeout for upstreams
X_REQUEST_TIMEOUT_SEC=5
# Max retries for upstream operations (client-level)
X_RETRY_MAX=2

# Per-operation backend orders (override X_BACKENDS)
X_BACKENDS_TWEETS=graphql,apify
X_BACKENDS_PROFILE=apify,graphql
X_BACKENDS_SEARCH=apify,graphql

# Field merge for profile enrichment
X_FIELD_MERGE=true

# Cache TTL for X responses (seconds). Used for degrade fallback.
X_CACHE_TTL_S=180

# Parallel race mode between first two backends
X_RACE_MODE=false
X_RACE_GUARD_MS=250

# Job cooldown (seconds) to avoid concurrent heavy polling
X_JOB_COOLDOWN_SEC=60

# GoPlus Security API Key
# Purpose: Smart contract security verification
# Required: Yes (for security checks)
# Source: https://gopluslabs.io/
# Minimum permission: Token detection API access
# Security: Use project-specific key, monitor usage
# WARNING: Do not commit to version control
GOPLUS_API_KEY=__REPLACE_ME__

#######################################
# Telegram Integration
#######################################

# Telegram Bot Token
# Purpose: Authentication for Telegram bot API
# Required: Yes (for Telegram notifications)
# Source: @BotFather on Telegram (use /newbot command)
# Minimum permission: Send messages to channels/groups
# Format: 123456789:ABC-DEF1234567890abcdef1234567890AbC
# WARNING: Do not commit to version control
TELEGRAM_BOT_TOKEN=__REPLACE_ME__

# Telegram Chat/Channel ID
# Purpose: Target channel or group for notifications
# Required: Yes (for Telegram notifications)
# Source: Use @userinfobot or web.telegram.org (check URL)
# Format: -1001234567890 (negative for groups/channels)
TELEGRAM_CHAT_ID=__REPLACE_ME__

# Enable/disable Telegram push notifications
# Purpose: Master switch for Telegram notifications
# Risk: When true, alerts will be sent to production channel
# Required: Yes
# Values: true|false (strict - no yes/no/1/0)
TELEGRAM_PUSH_ENABLED=false

#######################################
# Feature Flags
#######################################

# Demo mode toggle
# Purpose: Use sample data instead of live data
# Risk: When 1, production data sources are bypassed
# Required: Optional (defaults to 0)
# Values: 1 (demo mode) | 0 (production mode)
DEMO_MODE=0

#######################################
# Sentiment & Keyphrase Analysis
#######################################

# Sentiment analysis backend
# Purpose: Choose between rule-based or ML model
# Risk: HF model requires more resources and may be slower
# Required: Optional (defaults to rules)
# Values: rules | hf (HuggingFace)
SENTIMENT_BACKEND=rules

# Strict mode for sentiment analysis
# Purpose: Error handling strategy
# Risk: When 1, errors will crash the process instead of degrading
# Required: Optional (defaults to 0)
# Values: 0 (fallback on error) | 1 (fail on error)
SENTIMENT_STRICT=0

# HuggingFace model identifier
# Purpose: Specific model for sentiment analysis
# Required: Only if SENTIMENT_BACKEND=hf
# Source: https://huggingface.co/models
# Example: cardiffnlp/twitter-roberta-base-sentiment-latest
HF_MODEL=cardiffnlp/twitter-roberta-base-sentiment-latest

# Computation device for ML models
# Purpose: Where to run ML inference
# Risk: CUDA requires GPU with proper drivers
# Required: Optional (defaults to cpu)
# Values: cpu | cuda
HF_DEVICE=cpu

# Keyphrase extraction backend
# Purpose: Choose extraction method
# Required: Optional (defaults to rules)
# Values: rules | hf
KEYPHRASE_BACKEND=rules

#######################################
# Event Aggregation
#######################################

# Time bucket size for event grouping
# Purpose: Group events within time windows
# Risk: Larger values may delay event detection
# Required: Optional (defaults to 600)
# Unit: seconds
EVENT_TIME_BUCKET_SEC=600

# Number of top keywords for topic hashing
# Purpose: How many keywords define a topic
# Risk: Too few may over-merge topics, too many may under-merge
# Required: Optional (defaults to 3)
EVENT_TOPIC_TOPK=3

# Hash algorithm for topic IDs
# Purpose: Generate consistent topic identifiers
# Required: Optional (defaults to blake2s)
# Values: blake2s | sha256 | md5
EVENT_HASH_ALGO=blake2s

# Event key versioning scheme
# Purpose: Track event key format changes
# Required: Optional (defaults to v1)
EVENT_KEY_VERSION=v1

# Evidence retention count
# Purpose: How many evidence items to keep (0=all)
# Required: Optional (defaults to 0)
EVENT_EVIDENCE_TAIL=0

#######################################
# Performance & Latency Budgets
#######################################

# Maximum latency for filter stage
# Purpose: Performance monitoring threshold
# Risk: Too low may cause premature degradation
# Required: Optional (defaults to 10)
# Unit: milliseconds
LATENCY_BUDGET_MS_FILTER=10

# End-to-end pipeline latency limit
# Purpose: Total processing time budget
# Risk: Exceeding this triggers degradation
# Required: Optional (defaults to 120000)
# Unit: milliseconds (120000ms = 2 minutes)
LATENCY_BUDGET_MS_TOTAL=120000

#######################################
# LLM Refiner Configuration
#######################################

# Refiner backend selection
# Purpose: Choose refinement method
# Risk: LLM backend incurs API costs
# Required: Optional (defaults to rules)
# Values: llm | rules
REFINE_BACKEND=rules

# Maximum summary length
# Purpose: Truncate long summaries
# Required: Optional (defaults to 80)
# Unit: characters
REFINE_SUMMARY_MAXLEN=80

# Refiner stage latency budget
# Purpose: Time limit for refinement
# Required: Optional (defaults to 3200)
# Unit: milliseconds
LATENCY_BUDGET_MS_REFINE=3200

# Refiner timeout threshold
# Purpose: Hard timeout for LLM calls
# Required: Optional (defaults to 3500)
# Unit: milliseconds
REFINE_TIMEOUT_MS=3500

# Maximum retry attempts
# Purpose: Retry failed refinements
# Risk: More retries increase latency and costs
# Required: Optional (defaults to 0)
REFINE_MAX_RETRIES=0

# LLM provider selection
# Purpose: Choose LLM API provider
# Required: Only if REFINE_BACKEND=llm
# Values: openai | anthropic | local
REFINE_PROVIDER=openai

# LLM model selection
# Purpose: Specific model for refinement
# Required: Only if REFINE_BACKEND=llm
# Source: Provider's model list
# Example: gpt-5-mini, gpt-4o-mini
REFINE_MODEL=gpt-5-mini

# OpenAI API Key
# Purpose: Authentication for OpenAI API
# Required: Only if REFINE_PROVIDER=openai
# Source: https://platform.openai.com/api-keys
# Security: Use restricted key, monitor usage
# WARNING: Never commit to version control
# Uncomment and replace with your key:
# OPENAI_API_KEY=__REPLACE_ME__

#######################################
# Market Risk Detection
#######################################

# Abnormal volume threshold for market risk detection
# Purpose: Trigger market risk when 1h volume exceeds this value
# Required: Optional (defaults to 500000)
# Unit: USD
MARKET_RISK_VOLUME_THRESHOLD=500000

# Minimum liquidity threshold for market risk
# Purpose: Trigger market risk when liquidity falls below this value
# Required: Optional (defaults to 10000)
# Unit: USD
MARKET_RISK_LIQ_MIN=10000

# Risk liquidity threshold for high volume check
# Purpose: Combined with high volume to detect pump risk
# Required: Optional (defaults to 50000)
# Unit: USD
MARKET_RISK_LIQ_RISK=50000

# Cooldown period between market risk alerts for same token
# Purpose: Prevent spam alerts for same event_key
# Required: Optional (defaults to 600)
# Unit: seconds
MARKET_RISK_COOLDOWN_SEC=600

#######################################
# GoPlus Security Configuration
#######################################

# GoPlus Access Token (highest priority)
# Purpose: OAuth-style authentication
# Required: Optional (falls back to API key)
# Source: GoPlus dashboard OAuth flow
# WARNING: Do not commit to version control
GOPLUS_ACCESS_TOKEN=__REPLACE_ME__

# GoPlus API Key (backup auth)
# Purpose: Simple API key authentication
# Required: Yes (if no access token)
# Source: https://gopluslabs.io/
# WARNING: Do not commit to version control
GOPLUS_API_KEY=__REPLACE_ME__

# GoPlus Client ID (OAuth)
# Purpose: OAuth client identifier
# Required: Optional (for OAuth flow)
GOPLUS_CLIENT_ID=__REPLACE_ME__

# GoPlus Client Secret (OAuth)
# Purpose: OAuth client authentication
# Required: Optional (for OAuth flow)
# WARNING: Do not commit to version control
GOPLUS_CLIENT_SECRET=__REPLACE_ME__

# GoPlus API timeout
# Purpose: Maximum wait time for API response
# Risk: Too low may cause false failures
# Required: Optional (defaults to 4000)
# Unit: milliseconds
GOPLUS_TIMEOUT_MS=4000

# GoPlus retry attempts
# Purpose: Retry failed requests
# Risk: More retries increase latency
# Required: Optional (defaults to 2)
GOPLUS_RETRY=2

# GoPlus rate limit
# Purpose: Prevent API quota exhaustion
# Risk: Too high may hit quota limits
# Required: Optional (defaults to 28)
# Unit: requests per minute
GOPLUS_RATELIMIT_RPM=28

# Security cache TTL
# Purpose: Cache security check results
# Risk: Longer TTL may miss recent changes
# Required: Optional (defaults to 600)
# Unit: seconds
SECURITY_CACHE_TTL_S=600

# Security database cache TTL
# Purpose: Persist results in database
# Required: Optional (defaults to 86400)
# Unit: seconds (86400 = 24 hours)
SECURITY_DB_TTL_S=86400

# Allow stale security data
# Purpose: Use cached data when API fails
# Risk: May use outdated security information
# Required: Optional (defaults to true)
# Values: true | false
SECURITY_ALLOW_STALE=true

# Maximum stale data age
# Purpose: Limit how old stale data can be
# Required: Optional (defaults to 172800)
# Unit: seconds (172800 = 48 hours)
SECURITY_STALE_MAX_S=172800

# Security check backend
# Purpose: Choose security verification method
# Required: Optional (defaults to rules)
# Values: goplus | rules | off
SECURITY_BACKEND=rules

# Enable batch GoPlus scanning
# Purpose: Run background security scans
# Risk: Consumes API quota
# Required: Optional (defaults to false)
# Values: true | false
ENABLE_GOPLUS_SCAN=false

# Batch scan size
# Purpose: Number of items per scan batch
# Required: Optional (defaults to 50)
GOPLUS_SCAN_BATCH=50

# Scan interval
# Purpose: Time between scan batches
# Required: Optional (defaults to 10)
# Unit: seconds
GOPLUS_SCAN_INTERVAL_S=10

# Risk threshold for high tax
# Purpose: Tax percentage to flag as red
# Risk: Too low may over-flag legitimate tokens
# Required: Optional (defaults to 10)
# Unit: percentage
RISK_TAX_RED=10

# LP lock threshold for warning
# Purpose: Days of liquidity lock for yellow flag
# Required: Optional (defaults to 30)
# Unit: days
RISK_LP_YELLOW_DAYS=30

# Honeypot detection toggle
# Purpose: Flag honeypot tokens as red
# Required: Optional (defaults to true)
# Values: true | false
HONEYPOT_RED=true

# Minimum confidence for risk assessment
# Purpose: Confidence threshold for decisions
# Required: Optional (defaults to 0.6)
# Range: 0.0 to 1.0
RISK_MIN_CONFIDENCE=0.6

#######################################
# BigQuery / Onchain Data
#######################################

# GCP Service Account Credentials
# Purpose: Authentication for Google Cloud services
# Required: Yes (for BigQuery access)
# Source: GCP Console > IAM > Service Accounts > Create Key (JSON)
# Security: Use least privilege, only BigQuery Data Viewer role
# Path: Mount location in container
GOOGLE_APPLICATION_CREDENTIALS=/app/infra/secrets/gcp-sa.json

# GCP Project ID
# Purpose: Google Cloud project identifier
# Required: Yes (for BigQuery access)
# Source: GCP Console > Project selector
# Example: my-project-123456
GCP_PROJECT=your-gcp-project-id

# BigQuery data location
# Purpose: Regional location of datasets
# Required: Optional (defaults to US)
# Values: US | EU | asia-northeast1 | etc
BQ_LOCATION=US

# BigQuery read-only dataset
# Purpose: Dataset for blockchain data queries
# Required: Yes (for onchain features)
# Risk: Incorrect dataset may cause high costs
# Example: bigquery-public-data.crypto_ethereum
BQ_DATASET_RO=bigquery-public-data.crypto_ethereum

# BigQuery query timeout
# Purpose: Maximum query execution time
# Risk: Long queries may incur high costs
# Required: Optional (defaults to 60)
# Unit: seconds
BQ_TIMEOUT_S=60

# BigQuery cost guard
# Purpose: Maximum data scanned per query
# Risk: Exceeding this fails the query (cost protection)
# Required: Optional (defaults to 5)
# Unit: gigabytes
BQ_MAX_SCANNED_GB=5

# Onchain data backend
# Purpose: Enable/disable BigQuery integration
# Required: Optional (defaults to off)
# Values: bq | off
ONCHAIN_BACKEND=bq

# Data freshness SLO
# Purpose: Maximum acceptable data age
# Risk: Stricter SLO may increase query frequency
# Required: Optional (defaults to 600)
# Unit: seconds (600 = 10 minutes)
FRESHNESS_SLO=600

#######################################
# Rule Engine Configuration
#######################################

# Liquidity threshold
# Purpose: Minimum liquidity for consideration
# Required: Optional (defaults to 50000)
# Unit: USD
THETA_LIQ=50000

# Volume threshold
# Purpose: Minimum trading volume
# Required: Optional (defaults to 10000)
# Unit: USD
THETA_VOL=10000

# Sentiment threshold
# Purpose: Minimum sentiment score
# Required: Optional (defaults to 0.6)
# Range: 0.0 to 1.0
THETA_SENT=0.6

# Rule cache TTL
# Purpose: How long to cache rule evaluations
# Required: Optional (defaults to 5)
# Unit: seconds
RULES_TTL_SEC=5

# Rule reason refinement
# Purpose: Apply text refinement to rule outputs
# Risk: May increase latency
# Required: Optional (defaults to off)
# Values: on | off
RULES_REFINER=off

#######################################
# Cards & Notifications
#######################################

# Card summary backend
# Purpose: Method for generating summaries
# Risk: LLM backend incurs API costs
# Required: Optional (defaults to template)
# Values: llm | template
CARDS_SUMMARY_BACKEND=template

# Summary generation timeout
# Purpose: Time limit for summary generation
# Required: Optional (defaults to 1200)
# Unit: milliseconds
CARDS_SUMMARY_TIMEOUT_MS=1200

# Maximum summary length
# Purpose: Truncate long summaries
# Required: Optional (defaults to 280)
# Unit: characters
CARDS_SUMMARY_MAX_CHARS=280

# Maximum risk note length
# Purpose: Truncate risk descriptions
# Required: Optional (defaults to 160)
# Unit: characters
CARDS_RISKNOTE_MAX_CHARS=160

# Card refiner class
# Purpose: Custom refinement logic
# Required: Optional
# Format: module:ClassName
CARDS_REFINER_CLASS_PATH=api.refine:MiniRefiner

#######################################
# Application Settings
#######################################

# API server port
# Purpose: HTTP port for API service
# Risk: Conflicts with other services if changed
# Required: Optional (defaults to 8000)
API_PORT=8000

#######################################
# Metrics & Monitoring
#######################################

# Expose metrics endpoint
# Purpose: Control access to /metrics endpoint
# Risk: When true, exposes internal metrics publicly
# Required: Optional (defaults to false)
# Values: true (expose to Prometheus) | false (internal only)
# Security: Use reverse proxy with auth in production
METRICS_EXPOSED=true

#######################################
# Replay & Testing Configuration
#######################################

# Replay endpoint for X data
# Purpose: Testing endpoint for X data replay
# Required: Only for replay testing
# Source: Set after running `make routes`
REPLAY_ENDPOINT_X=__REPLACE_ME__

# Replay endpoint for DEX data
# Purpose: Testing endpoint for DEX data replay
# Required: Only for replay testing
# Source: Set after running `make routes`
REPLAY_ENDPOINT_DEX=__REPLACE_ME__

# Replay endpoint for topic data
# Purpose: Testing endpoint for topic data replay
# Required: Only for replay testing
# Source: Set after running `make routes`
REPLAY_ENDPOINT_TOPIC=__REPLACE_ME__

# Soft fail mode for replay
# Purpose: Continue on test failures
# Risk: May hide critical errors in CI/CD
# Required: Optional (defaults to false)
# Values: true | false
REPLAY_SOFT_FAIL=false
