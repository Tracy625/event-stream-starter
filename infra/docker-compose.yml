services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    working_dir: /app
    volumes:
      - ../api:/app/api:ro
      - ../rules:/app/rules:ro
    env_file: ./.env
    environment:
      PYTHONPATH: /app
      POSTGRES_URL: postgresql://app:app@db:5432/app
      REDIS_URL: redis://redis:6379/0
      SECURITY_BACKEND: rules
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  worker:
    build:
      context: ../worker
      dockerfile: Dockerfile
    env_file: ./.env
    environment:
      POSTGRES_URL: postgresql+psycopg2://app:app@db:5432/app
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  otel:
    image: alpine:latest
    command: echo "OpenTelemetry placeholder"

volumes:
  postgres_data: